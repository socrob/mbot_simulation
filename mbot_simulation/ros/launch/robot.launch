<?xml version="1.0"?>
<launch>
    <!-- load values from shell environment variables (check your bashrc and make sure ROBOT env is set) -->
    <arg name="robot" default="$(optenv ROBOT !!ROBOT env NOT SET!!)" />

    <!-- identify from ROBOT env if arm is required -->
    <arg name="arm_required" default="$(eval 'with-' in robot)"/>
    <arg name="cyton_required" default="$(eval 'with-cyton' in robot)"/>
    <arg name="kinova_required" default="$(eval 'with-kinova' in robot)"/>

    <!-- whether you want gazebo gui or not (saves resources if you set this to false) -->
    <arg name="gazebo_gui" default="true" />

    <!-- select your world -->
    <arg name="world_name" default="jaco.world" /> <!-- set to "empty.world" for empty world isr-testbed.world -->
    <!-- <arg name="world_path" default="$(find mbot_simulation_environments)/worlds" /> --> <!-- set to "worlds" empty world -->
    <arg name="world_path" default="$(find kinova_gazebo)/worlds" /> <!-- set to "worlds" empty world -->

    <!-- select start robot pose -->
    <arg name="robot_pose_x" default="0.5" />
    <arg name="robot_pose_y" default="0.5" />
    <arg name="robot_pose_z" default="0.01" />
    <arg name="robot_pose_yaw" default="0.0" />

    <!-- launch robot environment -->
    <include file="$(find mbot_simulation_environments)/launch/load_environment_example.launch" >
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="world_path" value="$(arg world_path)" />
        <arg name="gazebo_gui" value="$(arg gazebo_gui)" />
    </include>

    <!-- PID gains for the gazebo base plugin -->
    <rosparam param="/gazebo_ros_control/pid_gains">
      front_left_wheel:
        p: 1
        i: 0.1
        d: 0.0
      front_right_wheel:
        p: 1
        i: 0.1
        d: 0.0
      rear_left_wheel:
        p: 1
        i: 0.1
        d: 0.001
      rear_right_wheel:
        p: 1
        i: 0.1
        d: 0.0
    </rosparam>

    <!-- run common components with real robot -->
    <include file="$(find mbot_bringup)/ros/launch/components/real_sim_common_components.launch" />

    <!-- mbot base, head and arm controllers (ROS control) -->
    <include file="$(find mbot_gazebo_control)/ros/launch/mbot_control.launch" />

    <!-- spawn mbot (in a certain position without arms) -->
    <node pkg="gazebo_ros" type="spawn_model" name="mbot_spawner" unless="$(arg arm_required)"
          args="-package_to_model -urdf -model mbot -param robot_description
          -x $(arg robot_pose_x) -y $(arg robot_pose_y) -z $(arg robot_pose_z) -Y $(arg robot_pose_yaw)
          -J head_link_to_head_camera_link 1.15" />

    <!-- spawn mbot (in a certain position and with a default arm configuration for robot with kinova arm) -->
    <node pkg="gazebo_ros" type="spawn_model" name="mbot_spawner" if="$(arg kinova_required)"
          args="-package_to_model -urdf -model mbot -param robot_description
          -x $(arg robot_pose_x) -y $(arg robot_pose_y) -z $(arg robot_pose_z) -Y $(arg robot_pose_yaw)
          -J head_link_to_head_camera_link 1.15
          -J j2s6s300_joint_1 0.0
          -J j2s6s300_joint_2 2.9
          -J j2s6s300_joint_3 1.3
          -J j2s6s300_joint_4 -2.07
          -J j2s6s300_joint_5 1.4
          -J j2s6s300_joint_6 0.0
          -J j2s6s300_joint_finger_1 1.0
          -J j2s6s300_joint_finger_2 1.0
          -J j2s6s300_joint_finger_3 1.0" />
    
    <!-- spawn mbot (in a certain position and with a default arm configuration for robot with cyton) -->
    <node pkg="gazebo_ros" type="spawn_model" name="mbot_spawner" if="$(arg cyton_required)"
          args="-package_to_model -urdf -model mbot -param robot_description
          -x $(arg robot_pose_x) -y $(arg robot_pose_y) -z $(arg robot_pose_z) -Y $(arg robot_pose_yaw)
          -J left_arm_joint0 0.7378
          -J left_arm_joint1 1.4864
          -J left_arm_joint2 0.3175
          -J left_arm_joint3 0.3896
          -J left_arm_joint4 0.5062
          -J left_arm_joint5 0.9019
          -J left_arm_joint6 0.5123
          -J head_link_to_head_camera_link 1.15" />

    <!-- gripper interface, to be able to actuate with topic and actionlib -->
    <include file="$(find mbot_gripper_controller_sim)/ros/launch/gripper_interface_sim.launch" if="$(arg cyton_required)"/>

</launch>
